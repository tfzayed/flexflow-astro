---
import BlogCard from "@/components/BlogCard.astro";
import Pagination from "@/components/Pagination.astro";
import config from "@/config/config.json";
import Base from "@/layouts/Base.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { sortByDate } from "@/lib/utils/sortFunctions";
import { getEntry } from "astro:content";

const { summary_length } = config.settings;
const BLOG_FOLDER = "blog";

const { slug } = Astro.params;
const postIndex = await getEntry(BLOG_FOLDER, "-index");
const posts = await getSinglePage(BLOG_FOLDER);
const sortedPosts = sortByDate(posts);
const totalPages = Math.ceil(posts.length / config.settings.pagination);
const currentPage = slug && !isNaN(Number(slug)) ? Number(slug) : 1;
const indexOfLastPost = currentPage * config.settings.pagination;
const indexOfFirstPost = indexOfLastPost - config.settings.pagination;
const currentPosts = sortedPosts.slice(indexOfFirstPost, indexOfLastPost);

export async function getStaticPaths() {
  const BLOG_FOLDER = "blog";
  const posts = await getSinglePage(BLOG_FOLDER);
  const totalPages = Math.ceil(posts.length / config.settings.pagination);
  const paths = [];

  for (let i = 1; i < totalPages; i++) {
    paths.push({
      params: {
        slug: (i + 1).toString(),
      },
    });
  }
  return paths;
}
---

<Base
  title={postIndex.data.title}
  meta_title={postIndex.data.meta_title}
  description={postIndex.data.description}
>
  <section class="section-hero mb-24 xl:mb-28">
    <div class="text-center">
      <h1 class="page-heading">Our Blogs</h1>
    </div>
  </section>

  <section class="section mt-0">
    <div class="container">
      <div
        class="grid md:grid-cols-2 lg:grid-cols-3 justify-center gap-5 md:gap-8"
      >
        {currentPosts.map((post, i) => <BlogCard post={post} i={i} />)}
      </div>
      <Pagination
        section={BLOG_FOLDER}
        currentPage={currentPage}
        totalPages={totalPages}
      />
    </div>
  </section>
</Base>
